name: Doctochat Doctors APP DEV RO CI/CD

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Cache Yarn cache
        uses: actions/cache@v3
        id: cache-yarn
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Create env configs
        run: |
          echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> .env        
          echo "${{ secrets.API_PATH }}" >> .env
          echo "${{ secrets.PUSHER_ENV }}" >> .env
          echo "${{ secrets.FIREBASE_ENV }}" >> .env
          echo "VITE_API_PREFIX=ro" >> .env


      - name: Install Dependencies with Yarn
        if: steps.cache-node-modules.outputs.cache-hit != 'true' && steps.cache-yarn.outputs.cache-hit != 'true'
        run: yarn install --check-cache --prefer-offline --non-interactive

      - name: Build
        run: CI=false yarn build

      - name: SSH Server Deploy
        uses: kostya-ten/ssh-server-deploy@v4
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.SSH_PASS }}
          private_key: ${{ secrets.SERVER_PRIVATE_KEY }}
          scp_source: "build/"
          scp_target: ${{ secrets.TARGET_DOCTORS_DEV_APP_RO }}
