name: Deploy Doctor's APP - PROD

on:
  push:
    branches:
      - main

jobs:
  Setup-Ecosystem:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-yarn.outputs.cache-key }}
    steps:
      - uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Cache Yarn cache
        uses: actions/cache@v3
        id: cache-yarn
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

  Deploy-MD:
    needs: Setup-Ecosystem
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Cache from Setup
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Check node version
        run: node -v

      - name: Enable Corepack
        run: corepack enable

      - name: Set Yarn version
        run: yarn set version 3.6.1

      - name: Create env configs - MD
        run: |
          echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> .env        
          echo "${{ secrets.API_PATH }}" >> .env
          echo "${{ secrets.PUSHER_ENV }}" >> .env
          echo "${{ secrets.FIREBASE_ENV }}" >> .env
          echo "VITE_API_PREFIX=md" >> .env

      - name: Install Dependencies with Yarn
        run: yarn install --immutable

      - name: Build
        run: CI=false yarn build

      - name: SSH Server Deploy - MD
        uses: kostya-ten/ssh-server-deploy@v4
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.SSH_PASS }}
          private_key: ${{ secrets.SERVER_PRIVATE_KEY }}
          scp_source: "build/"
          scp_target: ${{ secrets.TARGET_DOCTORS_APP_MD }}

  Deploy-RO:
    needs: Setup-Ecosystem
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Cache from Setup
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Create env configs - RO
        run: |
          echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> .env        
          echo "${{ secrets.API_PATH }}" >> .env
          echo "${{ secrets.PUSHER_ENV }}" >> .env
          echo "${{ secrets.FIREBASE_ENV }}" >> .env
          echo "VITE_API_PREFIX=ro" >> .env

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Check node version
        run: node -v

      - name: Enable Corepack
        run: corepack enable

      - name: Set Yarn version
        run: yarn set version 3.6.1

      - name: Install Dependencies with Yarn
        run: yarn install --immutable

      - name: Build
        run: CI=false yarn build

      - name: SSH Server Deploy - MD
        uses: kostya-ten/ssh-server-deploy@v4
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.SSH_PASS }}
          private_key: ${{ secrets.SERVER_PRIVATE_KEY }}
          scp_source: "build/"
          scp_target: ${{ secrets.TARGET_DOCTORS_APP_RO }}

  Deploy-ONLINE:
    needs: Setup-Ecosystem
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Cache from Setup
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Check node version
        run: node -v

      - name: Enable Corepack
        run: corepack enable

      - name: Set Yarn version
        run: yarn set version 3.6.1

      - name: Create env configs - ONLINE
        run: |
          echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> .env        
          echo "${{ secrets.API_PATH }}" >> .env
          echo "${{ secrets.PUSHER_ENV }}" >> .env
          echo "${{ secrets.FIREBASE_ENV }}" >> .env
          echo "VITE_API_PREFIX=online" >> .env

      - name: Install Dependencies with Yarn
        run: yarn install --immutable

      - name: Build
        run: CI=false yarn build

      - name: SSH Server Deploy - MD
        uses: kostya-ten/ssh-server-deploy@v4
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.SSH_PASS }}
          private_key: ${{ secrets.SERVER_PRIVATE_KEY }}
          scp_source: "build/"
          scp_target: ${{ secrets.TARGET_DOCTORS_APP_ONLINE }}

  Send-Notification:
    needs: [Deploy-MD, Deploy-RO, Deploy-ONLINE]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Send telegram message
        uses: appleboy/telegram-action@master
        with:
          format: html
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            âœ… <b>[PROD] Doctor's APP</b>
            ðŸ¥· <b>User</b>: ${{ github.actor }}
            ðŸ“‚ <b>Commit:</b> <a href="https://github.com/${{ github.repository }}/commit/${{github.sha}}">${{ github.event.commits[0].message }}</a>